{
  "name": "ecommerce-backend",
  "version": "1.0.0",
  "description": "E-commerce Backend Microservices",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:auth\" \"npm run dev:catalog\" \"npm run dev:inventory\" \"npm run dev:cart\" \"npm run dev:order\" \"npm run dev:payment\" \"npm run dev:shipping\" \"npm run dev:search\" \"npm run dev:review\" \"npm run dev:notification\"",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:catalog": "cd services/catalog-service && npm run dev",
    "dev:inventory": "cd services/inventory-service && npm run dev",
    "dev:cart": "cd services/cart-service && npm run dev",
    "dev:order": "cd services/order-service && npm run dev",
    "dev:payment": "cd services/payment-service && npm run dev",
    "dev:shipping": "cd services/shipping-service && npm run dev",
    "dev:search": "cd services/search-service && npm run dev",
    "dev:review": "cd services/review-service && npm run dev",
    "dev:notification": "cd services/notification-service && npm run dev",
    "build": "npm run build:all",
    "build:all": "npm run build:auth && npm run build:catalog && npm run build:inventory && npm run build:cart && npm run build:order && npm run build:payment && npm run build:shipping && npm run build:search && npm run build:review && npm run build:notification",
    "build:auth": "cd services/auth-service && npm run build",
    "build:catalog": "cd services/catalog-service && npm run build",
    "build:inventory": "cd services/inventory-service && npm run build",
    "build:cart": "cd services/cart-service && npm run build",
    "build:order": "cd services/order-service && npm run build",
    "build:payment": "cd services/payment-service && npm run build",
    "build:shipping": "cd services/shipping-service && npm run build",
    "build:search": "cd services/search-service && npm run build",
    "build:review": "cd services/review-service && npm run build",
    "build:notification": "cd services/notification-service && npm run build",
    "test": "npm run test:all",
    "test:all": "npm run test:auth && npm run test:catalog && npm run test:inventory && npm run test:cart && npm run test:order && npm run test:payment && npm run test:shipping && npm run test:search && npm run test:review && npm run test:notification",
    "test:auth": "cd services/auth-service && npm test",
    "test:catalog": "cd services/catalog-service && npm test",
    "test:inventory": "cd services/inventory-service && npm test",
    "test:cart": "cd services/cart-service && npm test",
    "test:order": "cd services/order-service && npm test",
    "test:payment": "cd services/payment-service && npm test",
    "test:shipping": "cd services/shipping-service && npm test",
    "test:search": "cd services/search-service && npm test",
    "test:review": "cd services/review-service && npm test",
    "test:notification": "cd services/notification-service && npm test",
    "install:all": "npm install && npm run install:services",
    "install:services": "npm run install:auth && npm run install:catalog && npm run install:inventory && npm run install:cart && npm run install:order && npm run install:payment && npm run install:shipping && npm run install:search && npm run install:review && npm run install:notification",
    "install:auth": "cd services/auth-service && npm install",
    "install:catalog": "cd services/catalog-service && npm install",
    "install:inventory": "cd services/inventory-service && npm install",
    "install:cart": "cd services/cart-service && npm install",
    "install:order": "cd services/order-service && npm install",
    "install:payment": "cd services/payment-service && npm install",
    "install:shipping": "cd services/shipping-service && npm install",
    "install:search": "cd services/search-service && npm install",
    "install:review": "cd services/review-service && npm install",
    "install:notification": "cd services/notification-service && npm install",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f"
  },
  "keywords": [
    "ecommerce",
    "microservices",
    "nodejs",
    "express",
    "mongodb",
    "typescript"
  ],
  "author": "Your Name",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2",
    "nodemon": "^3.0.2",
    "typescript": "^5.2.2",
    "@types/node": "^20.8.0"
  },
  "workspaces": [
    "services/*",
    "shared/*"
  ]
}
